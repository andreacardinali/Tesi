<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="_openFileDialog.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="$this.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>