<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="backgroundWorker1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>